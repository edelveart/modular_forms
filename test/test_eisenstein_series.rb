# frozen_string_literal: true

require 'minitest/autorun'
require_relative '../lib/modular_forms'

class TestModularForms < Minitest::Test
  EISENSTEIN_SERIES_EXPECTED = {
    4 => [1, 240, 2160, 6720, 17_520, 30_240, 60_480, 82_560, 140_400, 181_680,
          272_160, 319_680, 490_560, 527_520, 743_040, 846_720, 1_123_440, 1_179_360, 1_635_120, 1_646_400],

    6 => [1, -504, -16_632, -122_976, -532_728, -1_575_504, -4_058_208, -8_471_232, -17_047_800, -29_883_672, -51_991_632, -81_170_208, -129_985_632, -187_132_176, -279_550_656, -384_422_976, -545_530_104, -715_608_432, -986_161_176, -1_247_954_400], # rubocop:disable Layout/LineLength

    8 => [1, 480, 61_920, 1_050_240, 7_926_240, 37_500_480, 135_480_960, 395_301_120, 1_014_559_200, 2_296_875_360, 4_837_561_920, 9_353_842_560, 17_342_613_120, 30_119_288_640, 50_993_844_480, 82_051_050_240, 129_863_578_080, 196_962_563_520, 296_296_921_440, 429_058_435_200], # rubocop:disable Layout/LineLength

    10 => [1, -264, -135_432, -5_196_576, -69_341_448, -515_625_264, -2_665_843_488, -10_653_352_512, -35_502_821_640, -102_284_205_672, -264_515_760_432, -622_498_190_688, -1_364_917_062_432, -2_799_587_834_736, -5_465_169_838_656, -10_149_567_696_576, -18_177_444_679_944, -31_307_199_395_472, -52_471_797_509_736, -85_189_552_213_920] # rubocop:disable Layout/LineLength
  }.freeze

  EISENSTEIN_SERIES_EXPECTED_GAL_F = {
    6 => [1, 1, 3, 4, 2, 1, 2, 3, 0, 3, 3, 2, 3, 4, 4, 4, 1, 3, 4, 0],
    8 => [1, 4, 6, 14, 7, 10, 4, 1, 16, 5, 15, 16, 16, 3, 10, 1, 12, 4, 16, 6],
    114 => [1, 0, 0, 0, 0, 0, 0, 56, 50, 28, 66, 52, 43, 9, 83, 70, 16, 50, 29, 59]
  }.freeze

  def test_eisenstein_series
    EISENSTEIN_SERIES_EXPECTED.each do |weight, expected|
      actual = ModularForms.eisenstein_series(weight).take(20)
      assert_equal(expected, actual, "Failed for weight k = #{weight}")
    end
  end

  def test_eisenstein_series_gal_f
    gal_f_by_weight = { 6 => 5, 8 => 17, 114 => 97 }
    EISENSTEIN_SERIES_EXPECTED_GAL_F.each do |weight, expected|
      actual = ModularForms.eisenstein_series(weight, gal_f_by_weight[weight]).take(20)
      assert_equal(expected, actual, "Failed for weight k = #{weight}")
    end
  end

  def test_eisenstein_series_with_invalid_k
    invalid_values = [-4, -1, 0, 1, 3, 5, 7, 1134.3534]

    invalid_values.each do |invalid_k|
      assert_raises(ArgumentError, "Expected error for invalid k = #{invalid_k}") do
        ModularForms.eisenstein_series(invalid_k).take(5)
      end
    end
  end

  def test_eisenstein_series_with_invalid_gal_f
    invalid_gal_f = [-4, 1, 982, 12, 30, 6_897_942_012, 1134.3534]

    invalid_gal_f.each do |invalid_val|
      assert_raises(ArgumentError, "GF must be a prime number = #{invalid_val}") do
        ModularForms.eisenstein_series(6, invalid_val).take(5)
      end
    end
  end

  E4_E6 = [1, -264, -135_432, -5_196_576, -69_341_448, -515_625_264, -2_665_843_488, -10_653_352_512, -35_502_821_640, -102_284_205_672, -264_515_760_432, -622_498_190_688, -1_364_917_062_432, -2_799_587_834_736, -5_465_169_838_656, -10_149_567_696_576, -18_177_444_679_944, -31_307_199_395_472, -52_471_797_509_736, -85_189_552_213_920, -135_432_584_966_448, -209_700_590_846_208, -319_341_571_822_944, -475_504_302_626_496, -698_837_541_161_760, -1_007_080_593_750_264, -1_436_188_559_219_568, -2_013_260_020_242_240, -2_798_177_610_744_384, -3_829_886_537_629_680, -5_206_728_228_343_488, -6_980_060_250_417_408, -9_306_851_676_131_592, -12_253_254_385_502_592, -16_060_593_289_877_136, -20_807_339_778_352_512, -26_865_662_609_190_504, -34_309_899_305_900_592, -43_702_240_285_740_960, -55_107_086_938_943_424, -69_341_484_018_446_640, -86_428_830_680_005_968, -107_576_403_104_104_704, -132_684_449_551_326_816, -163_503_507_271_538_016, -199_773_941_487_330_672, -243_933_707_247_392_448, -295_450_444_899_130_752, -357_804_821_080_017_696, -429_901_200_501_711_048, -516_632_344_593_885_432, -616_250_912_900_470_848, -735_331_341_908_253_552, -871_137_588_235_763_376, -1_032_802_390_384_269_120, -1_215_817_401_185_690_688, -1_432_666_947_354_477_120, -1_676_871_145_778_801_280, -1_964_731_793_804_025_840, -2_287_030_896_124_904_160, -2_665_855_002_479_562_432, -3_087_254_568_508_213_488, -3_580_770_908_464_130_304, -4_127_536_740_279_264_576, -4_765_108_058_179_375_368, -5_467_947_789_306_584_736, -6_285_919_499_762_829_696, -7_182_525_080_621_866_272, -8_223_055_071_616_489_104, -9_359_826_692_899_947_264, -10_674_165_306_294_838_656, -12_104_004_189_670_544_448, -13_755_219_358_189_743_720, -15_542_098_890_982_729_296, -17_600_978_343_927_003_696, -19_823_374_407_380_196_576, -22_375_632_215_851_585_440, -25_120_047_967_732_802_304, -28_269_935_599_677_976_512, -31_640_821_339_411_236_480, -35_502_839_817_960_304_944, -39_626_996_978_428_010_184, -44_337_990_138_843_061_584, -49_352_227_390_630_666_656, -55_079_328_089_892_454_656, -61_146_905_126_480_645_472, -68_067_122_619_830_656_608, -75_387_486_606_702_621_120, -83_713_796_345_525_654_880, -92_494_090_578_776_095_440, -102_484_031_983_000_634_736, -112_973_470_044_505_327_488, -124_894_533_614_967_559_872, -137_395_505_969_216_259_072, -151_566_078_233_254_075_776, -166_385_929_357_364_713_920, -183_196_068_392_974_256_928, -200_700_999_484_805_217_552, -220_539_315_857_377_767_624, -241_180_806_692_345_709_024, -264_516_767_512_663_091_448, -288_732_911_988_671_278_128, -316_136_718_317_941_545_024, -344_460_120_530_920_570_176, -376_489_649_856_613_653_360, -409_571_676_197_090_846_208, -446_893_582_764_946_611_888, -485_353_232_078_920_790_112, -528_796_837_136_766_031_680, -573_379_825_772_769_678_960, -623_714_326_808_259_322_944, -675_356_057_937_347_252_928, -733_525_477_056_145_637_952, -793_067_071_627_846_824_336, -860_234_897_784_525_056_640, -928_719_816_571_677_626_496, -1_005_946_508_314_198_859_760, -1_084_672_795_018_811_249_328, -1_173_246_849_712_075_834_080, -1_263_358_451_982_714_062_976, -1_364_917_771_419_103_661_760, -1_467_818_171_384_447_301_672, -1_583_761_593_644_713_519_344, -1_701_265_103_105_237_474_112, -1_833_361_685_193_885_133_056, -1_966_954_284_668_484_375_264, -2_117_426_347_763_262_727_488, -2_269_015_253_632_881_042_432, -2_439_735_325_787_840_188_680, -2_611_760_704_968_317_046_144, -2_805_057_215_914_277_969_568, -2_999_477_356_772_111_839_008, -3_218_403_037_132_954_306_944, -3_437_705_795_736_059_823_360, -3_684_635_366_359_017_397_536, -3_932_150_490_295_645_242_240, -4_210_204_227_974_841_816_720, -4_488_373_931_071_061_850_192, -4_801_591_093_457_672_946_432, -5_113_722_171_999_944_358_240, -5_465_193_444_162_735_744_384, -5_815_646_557_394_489_722_368, -6_209_354_149_300_989_301_824, -6_601_281_673_467_028_629_312, -7_042_672_311_495_432_990_312, -7_480_250_973_694_506_379_680, -7_973_096_731_074_140_128_848, -8_462_175_230_675_680_268_832, -9_011_735_221_989_931_792_944, -9_556_092_448_219_730_516_400].freeze # rubocop:disable Layout/LineLength
  def test_eisenstein_series_product
    actual = ModularForms.eisenstein_series_product(4, 6, 150)
    assert_equal(E4_E6, actual)
  end

  E4_POW3 = [1, 720, 179_280, 16_954_560, 396_974_160, 4_632_858_720, 34_413_301_440, 187_477_879_680, 814_940_600_400,
             2_975_469_665_040, 9_486_467_837_280, 27_053_330_840_640, 70_485_969_919_680, 169_930_679_355_360, 384_163_875_688_320, 820_167_497_170_560, 1_668_890_801_059_920, 3_249_626_139_960_480, 6_096_884_624_994_960, 11_045_508_493_118_400, 19_428_434_736_248_160, 33_213_183_182_000_640, 55_431_582_035_319_360, 90_344_577_991_916_160, 144_355_754_667_499_200, 226_066_346_180_748_720, 348_188_710_747_580_640, 527_108_064_779_721_600, 786_767_305_782_407_040, 1_156_841_469_349_797_600, 1_680_521_624_263_117_440, 2_409_208_948_515_479_040, 3_417_886_973_693_900_880, 4_792_384_327_947_390_720, 6_658_492_910_869_487_520, 9_154_704_614_903_527_680, 12_486_419_299_988_799_120, 16_869_989_146_561_642_080, 22_632_233_085_199_281_600, 30_102_943_879_644_209_280, 39_789_443_702_690_690_400, 52_181_705_197_042_878_240, 68_053_817_808_375_759_360, 88_114_798_556_810_717_760, 113_523_922_997_379_385_920, 145_290_076_483_587_971_040, 185_116_016_143_755_699_840, 234_407_920_308_594_842_880, 295_640_558_456_818_196_160, 370_725_722_864_866_650_960, 463_209_976_371_349_727_280, 575_665_535_182_772_039_040, 713_090_632_320_510_202_080, 878_881_669_179_406_558_560, 1_080_044_519_703_337_238_400, 1_320_947_128_834_811_936_640, 1_611_299_409_988_012_617_600, 1_956_688_559_471_177_683_200, 2_370_368_004_282_742_802_400, 2_859_354_281_704_033_915_200, 3_441_709_142_939_466_967_680, 4_125_950_629_387_083_836_640, 4_936_469_203_992_962_280_960, 5_883_616_229_822_714_597_760, 6_999_832_775_669_602_170_960, 8_297_414_257_352_564_151_360, 9_819_595_313_364_201_281_280, 11_580_269_611_064_189_964_480, 13_636_596_525_234_769_729_440, 16_004_359_240_315_226_887_680, 18_757_989_860_749_410_136_320, 21_914_808_370_540_966_995_840, 25_572_186_509_166_944_902_800, 29_747_282_835_124_871_120_160, 34_566_607_997_453_259_565_920, 40_047_203_913_237_565_450_560, 46_350_824_721_792_229_195_200, 53_492_613_699_525_895_964_160, 61_680_932_198_075_593_710_720, 70_924_102_000_332_342_393_600, 81_488_780_183_655_621_997_920, 93_375_620_468_153_384_515_920, 106_920_313_549_416_764_681_760, 122_111_019_580_235_341_440_960, 139_374_251_958_962_238_865_920].freeze # rubocop:disable Layout/LineLength

  def test_eisenstein_series_pow
    actual = ModularForms.eisenstein_series_pow(4, 3, 85)
    assert_equal(E4_POW3, actual)
  end
end
